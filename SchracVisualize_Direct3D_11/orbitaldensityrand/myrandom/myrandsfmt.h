/*! \file myrandsfmt.h
    \brief SFMT??????????????

    Copyright © 2017 @dc1394 All Rights Reserved.
    This software is released under the BSD 2-Clause License.
*/

#ifndef _MYRANDSFMT_H_
#define _MYRANDSFMT_H_

#pragma once

#include "../SFMT-src-1.5.1/SFMT.h"
#include <cstdint>						// for std::uint32_t, std::uint_least32_t
#include <functional>					// for std::ref
#include <random>						// for std::random_device
#include <vector>						// for std::vector
#include <boost/range/algorithm.hpp>    // for boost::generate

namespace myrandom {
    //! A class.
    /*!
        ???????
    */
    class MyRandSfmt final {
        // #region ??????????????

    public:
        //! A constructor.
        /*!
            ??????????
            \param min ????????
            \param max ????????
        */
        inline MyRandSfmt(double min, double max);

        //! A destructor.
        /*!
            ???????????
        */
        ~MyRandSfmt() = default;

        // #endregion ??????????????

        // #region ?????

        //!  A public member function.
        /*!
            [min, max]??????????????
        */
        double myrand()
        {
            return sfmt_genrand_real1(&sfmt_) * (max_ - min_) + min_;
        }

        // #endregion ?????

        // #region ?????

    private:
        //! A private static member variable (constant expression).
        /*!
            ????????std::vector????
        */
        static std::vector<std::uint_least32_t>::size_type const SIZE = 1;

		//! A private member variable (constant).
        /*!
            ????????
        */
        double const max_;

		//! A private member variable (constant).
        /*!
            ????????
        */
        double const min_;

        //! A private member variable.
        /*!
            ??????
        */
		sfmt_t sfmt_{};

        // #region ??????????????????

    public:
        //! A public constructor (deleted).
        /*!
        	????????????(??)
        */
        MyRandSfmt() = delete;

        //! A public copy constructor (deleted).
        /*!
            ??????????(??)
            \param dummy ???????????(???)
        */
        MyRandSfmt(const MyRandSfmt & dummy) = delete;

        //! A public member function (deleted).
        /*!
            operator=()???(??)
            \param dummy ???????????(???)
            \return ???????????
        */
        MyRandSfmt & operator=(const MyRandSfmt & dummy) = delete;

        // #endregion ??????????????????
    };

    MyRandSfmt::MyRandSfmt(double min, double max)
    	:   max_(max),
    	    min_(min)
    {
        // ????????
        std::random_device rnd;

        // ???????
        std::vector<std::uint_least32_t> v(SIZE);

        // ???????
        // ?????????????????
        boost::generate(v, std::ref(rnd));

        // ??????
		sfmt_init_gen_rand(&sfmt_, v[0]);
    }
}

#endif  // _MYRANDSFMT_H_
