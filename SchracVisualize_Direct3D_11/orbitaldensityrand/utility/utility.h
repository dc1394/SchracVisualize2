/*! \file utility.h
    \brief ???????????????

    Copyright © 2015-2019 @dc1394 All Rights Reserved.
    This software is released under the BSD 2-Clause License.
*/

#ifndef _UTILITY_H_
#define _UTILITY_H_

#pragma once

#include <array>        // for std::array
#include <cstdint>      // for std::int32_t
#include <string>       // for std::wstring
#include <Windows.h>

namespace utility {
    //! A function.
    /*!
        ?????????????????????
        \param mbs ?????????
        \param codeMulti ???????????????(?????=932)
        \return ??????
    */
    std::wstring my_mbstowcs(std::string const& mbs, std::int32_t codeMulti = 932);

    //! A function.
    /*!
        ???????
        \return ?????
    */
    std::string myOpenFile();

    //! A function.
    /*!
        ?????????????????????
        \param wcs ??????
        \param codeMulti ???????????????(?????=932)
        \return ?????????
    */
    std::string my_wcstombs(std::array<wchar_t, MAX_PATH> const& wcs, std::int32_t codeMulti = 932);

    //! A function.
    /*!
        ??????????????
        \param hWnd ?????????
        \param filepath ???????
        \param filename ?????
        \param title ????????????????
        \param defextension ?????????????
        \return ???????????????
    */
    BOOL showFileDialog(HWND hWnd, wchar_t* filepath, wchar_t* filename, wchar_t const* title, wchar_t const* defextension);

    template <typename T>
    //! A struct.
    /*!
        ??????????????????
        \tparam T ?????????
    */
    struct Safe_Delete {
        //! A public member function.
        /*!
            ???????????????
            \param p ??????????????
        */
        void operator()(T* p) {
            if (p) {
                delete p;
                p = nullptr;
            }
        }
    };
}

#endif  // _UTILITY_H_
